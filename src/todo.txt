TODO: to handle double quotes, just enable a state where if you're inside a double quote, 
    you don't generate a token after a whitespace
    Following that, you actually keep the tokens as words, but they would contain spaces, doublequotes
    Only after that, you'd pass over the WORD tokens and then reconstruct them appropriately, depending on doublequotes,
    singlequotes, and env variable expansions

    Actually, the easiest way to implement this is the following: 
      When encountering a doublequote or a singlequote, just keep appending to the value variable until you encounter
      the closing appropriate quote, without even generating a token (neither in the beginning nor the end)

So the plan is: Lexer -> Expansion -> Delete Quotes (', ") -> File handling -> Execution
